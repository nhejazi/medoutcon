% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/medoutcon.R
\name{medoutcon}
\alias{medoutcon}
\title{Efficient estimation of natural and interventional (in)direct effects}
\usage{
medoutcon(
  W,
  A,
  Z,
  M,
  Y,
  R = rep(1, length(Y)),
  ids = seq_along(R),
  obs_weights = rep(1, length(Y)),
  svy_weights = NULL,
  two_phase_weights = rep(1, length(Y)),
  effect = c("direct", "indirect", "pm"),
  contrast = NULL,
  g_learners = sl3::Lrnr_glm_fast$new(),
  h_learners = sl3::Lrnr_glm_fast$new(),
  b_learners = sl3::Lrnr_glm_fast$new(),
  q_learners = sl3::Lrnr_glm_fast$new(),
  r_learners = sl3::Lrnr_glm_fast$new(),
  u_learners = sl3::Lrnr_hal9001$new(),
  v_learners = sl3::Lrnr_hal9001$new(),
  d_learners = sl3::Lrnr_glm_fast$new(),
  g_adjust = NULL,
  estimator = c("tmle", "onestep"),
  estimator_args = list(cv_folds = 5L, max_iter = 5L, tiltmod_tol = 5),
  g_bounds = c(0.001, 0.999)
)
}
\arguments{
\item{W}{A \code{matrix}, \code{data.frame}, or similar object corresponding
to a set of baseline covariates.}

\item{A}{A \code{numeric} vector corresponding to a treatment variable. The
parameter of interest is defined as a location shift of this quantity.}

\item{Z}{A \code{numeric} vector corresponding to an intermediate confounder
affected by treatment (on the causal pathway between the intervention A,
mediators M, and outcome Y, but unaffected itself by the mediators). When
set to \code{NULL}, the natural (in)direct effects are estimated.}

\item{M}{A \code{numeric} vector, \code{matrix}, \code{data.frame}, or
similar corresponding to a set of mediators (on the causal pathway between
the intervention A and the outcome Y).}

\item{Y}{A \code{numeric} vector corresponding to an outcome variable.}

\item{R}{A \code{logical} vector indicating whether a sampled observation's
mediator was measured via a two-phase sampling design. Default is to use a
vector of ones, implying that two-phase sampling was not performed.}

\item{ids}{An optional \code{numeric} vector indicating whether an
observation belongs to a given cluster.}

\item{obs_weights}{A \code{numeric} vector of observation-level weights. The
default is to give all observations equal weighting.}

\item{svy_weights}{A \code{numeric} vector of observation-level weights that
have been computed externally, such as survey sampling weights. Such
weights are used in the construction of re-weighted efficient estimators.}

\item{two_phase_weights}{A \code{numeric} vector of known observation-level
weights corresponding to the inverse probability of the mediator being
measured. Defaults to a vector of ones.}

\item{effect}{A \code{character} indicating whether to compute the direct or
the indirect effect as discussed in <https://arxiv.org/abs/1912.09936>.
This is ignored when the argument \code{contrast} is provided. By default,
the direct effect is estimated.}

\item{contrast}{A \code{numeric} double indicating the two values of the
intervention \code{A} to be compared. The default value of \code{NULL} has
no effect, as the value of the argument \code{effect} is instead used to
define the contrasts. To override \code{effect}, provide a \code{numeric}
double vector, giving the values of a' and a*, e.g., \code{c(0, 1)}.}

\item{g_learners}{A \code{\link[sl3]{Stack}} object, or other learner class
(inheriting from \code{\link[sl3]{Lrnr_base}}), containing instantiated
learners from \pkg{sl3}; used to fit a model for the propensity score.}

\item{h_learners}{A \code{\link[sl3]{Stack}} object, or other learner class
(inheriting from \code{\link[sl3]{Lrnr_base}}), containing instantiated
learners from \pkg{sl3}; used to fit a model for a parameterization of the
propensity score that conditions on the mediators.}

\item{b_learners}{A \code{\link[sl3]{Stack}} object, or other learner class
(inheriting from \code{\link[sl3]{Lrnr_base}}), containing instantiated
learners from \pkg{sl3}; used to fit a model for the outcome regression.}

\item{q_learners}{A \code{\link[sl3]{Stack}} object, or other learner class
(inheriting from \code{\link[sl3]{Lrnr_base}}), containing instantiated
learners from \pkg{sl3}; used to fit a model for a nuisance regression of
the intermediate confounder, conditioning on the treatment and potential
baseline covariates.}

\item{r_learners}{A \code{\link[sl3]{Stack}} object, or other learner class
(inheriting from \code{\link[sl3]{Lrnr_base}}), containing instantiated
learners from \pkg{sl3}; used to fit a model for a nuisance regression of
the intermediate confounder, conditioning on the mediators, the treatment,
and potential baseline confounders.}

\item{u_learners}{A \code{\link[sl3]{Stack}} object, or other learner class
(inheriting from \code{\link[sl3]{Lrnr_base}}), containing instantiated
learners from \pkg{sl3}; used to fit a pseudo-outcome regression required
for in the efficient influence function.}

\item{v_learners}{A \code{\link[sl3]{Stack}} object, or other learner class
(inheriting from \code{\link[sl3]{Lrnr_base}}), containing instantiated
learners from \pkg{sl3}; used to fit a pseudo-outcome regression required
for in the efficient influence function.}

\item{d_learners}{A \code{\link[sl3]{Stack}} object, or other learner class
(inheriting from \code{\link[sl3]{Lrnr_base}}), containing instantiated
learners from \pkg{sl3}; used to fit an initial efficient influence
function regression when computing the efficient influence function in a
two-phase sampling design.}

\item{g_adjust}{A \code{character} vector corresponding to a subset of
baseline covariates in \code{W} to be used for fitting the propensity
score.}

\item{estimator}{The desired estimator of the direct or indirect effect (or
contrast-specific parameter) to be computed. Both an efficient one-step
estimator using cross-fitting and a cross-validated targeted minimum loss
estimator (TMLE) are available. The default is the TML estimator.}

\item{estimator_args}{A \code{list} of extra arguments to be passed (via
\code{...}) to the function call for the specified estimator. The default
is chosen to allow the number of folds used in computing the one-step or
TML estimators to be easily adjusted. In the case of the TML estimator,
the number of update (fluctuation) iterations is limited, and a tolerance
is included for updates introduced by the tilting (fluctuation) models.}

\item{g_bounds}{A \code{numeric} vector containing two values, the
first being the minimum allowable estimated propensity score value and the
second being the maximum allowable for estimated propensity score value.
Defaults to \code{c(0.001, 0.999)}.}
}
\description{
Efficient estimation of natural and interventional (in)direct effects
}
\examples{
# here, we show one-step and TML estimates of the interventional direct
# effect; the indirect effect can be evaluated by a straightforward change
# to the penultimate argument. the natural direct and indirect effects can
# be evaluated by omitting the argument Z (inappropriate in this example).
# create data: covariates W, exposure A, post-exposure-confounder Z,
#              mediator M, outcome Y
n_obs <- 200
w_1 <- rbinom(n_obs, 1, prob = 0.6)
w_2 <- rbinom(n_obs, 1, prob = 0.3)
w <- as.data.frame(cbind(w_1, w_2))
a <- as.numeric(rbinom(n_obs, 1, plogis(rowSums(w) - 2)))
z <- rbinom(n_obs, 1, plogis(rowMeans(-log(2) + w - a) + 0.2))
m_1 <- rbinom(n_obs, 1, plogis(rowSums(log(3) * w + a - z)))
m_2 <- rbinom(n_obs, 1, plogis(rowSums(w - a - z)))
m <- as.data.frame(cbind(m_1, m_2))
y <- rbinom(n_obs, 1, plogis(1 / (rowSums(w) - z + a + rowSums(m))))

# one-step estimate of the interventional direct effect
os_de <- medoutcon(
  W = w, A = a, Z = z, M = m, Y = y,
  effect = "direct",
  estimator = "onestep"
)

# TML estimate of the interventional direct effect
# NOTE: improved variance estimate and de-biasing from targeting procedure
tmle_de <- medoutcon(
  W = w, A = a, Z = z, M = m, Y = y,
  effect = "direct",
  estimator = "tmle"
)
}
